FROM ubuntu:20.04

# Evitar interações durante instalação de pacotes
ENV DEBIAN_FRONTEND=noninteractive

# Instalar dependências de build, runtime, nginx e utilitários
RUN apt-get update && apt-get install -y \
    git \
    curl \
    build-essential \
    libssl-dev \
    libpq-dev \
    libsqlite3-dev \
    ca-certificates \
    nginx \
    gettext-base \
    && rm -rf /var/lib/apt/lists/*

# Criar usuário/grupo 'nginx' (no Ubuntu, o pacote nginx usa www-data por padrão; 
# mantemos o usuário 'nginx' por compatibilidade com o nginx.conf existente)
RUN adduser --system --no-create-home --group nginx || true

# Instalar cloudflared (via repositório oficial)
RUN set -eux; \
    mkdir -p --mode=0755 /usr/share/keyrings; \
    curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg -o /usr/share/keyrings/cloudflare-main.gpg; \
    echo "deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared any main" > /etc/apt/sources.list.d/cloudflared.list; \
    apt-get update; \
    apt-get install -y cloudflared; \
    rm -rf /var/lib/apt/lists/*

# Build do compilador V
WORKDIR /tmp
RUN git clone https://github.com/vlang/v && \
    cd v && \
    make && \
    ./v symlink && \
    v --version

# Criar diretório para a aplicação
WORKDIR /app

# Copiar arquivos do projeto
COPY . .

# Garantir permissão de execução do start.sh
RUN chmod +x start.sh

# Instalar dependências do projeto (via v)
RUN v install
RUN v install https://github.com/ken0x0a/v-dotenv

# Compilar o projeto em modo de produção
RUN v -prod . -o TabuaMareAPI

# Configurar Nginx: usar os arquivos do repositório
RUN rm -rf /etc/nginx/conf.d/* && rm -f /etc/nginx/nginx.conf
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/conf.d/ /etc/nginx/conf.d/

# Porta padrão interna (Render definirá PORT em runtime). EXPOSE é metadado.
EXPOSE 8080
ENV PORT=8080

# Comando para iniciar todos os processos (APIs + Nginx + Cloudflare Tunnel opcional)
CMD ["./start.sh"]